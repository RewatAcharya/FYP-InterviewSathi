@using InterviewSathi.Web.Models.Entities.BlogsEntity
@model InterviewSathi.Web.Models.Entities.ApplicationUser

@{
    ViewData["Title"] = "MyProfile";
    var skills = ViewBag.Skills;
    var likes = ViewBag.like as List<LikeCount>;
    var blogs = ViewBag.Blogs;
}

<div class="container mt-4">
    <div class="row">
    <!-- Cover photo -->
    <div class="col-md-12">
    <img src="~/images/covers/@Model.CoverURL" class="opacity-75" height="200px" width="100%" alt="Cover Photo">
    </div>
    </div> 

    <div class="row mt-3">
        <div class="col-md-2">
            <!-- Profile picture -->
            <img src="~/images/Profiles/@Model.ProfileURL" class="rounded-circle img-fluid" alt="Profile Picture">
        </div>

        <div class="col-md-8">
            <!-- User information -->
            <h2>
                @Model.Name - @foreach (var role in ViewBag.Role)
                {
                    @role
                }
            </h2>
            <p>@Model.Bio</p>
            <p>
                @foreach (var skill in skills)
                {
                    @skill.Skill.NameOfSkill

                    <span>,</span>
                }
            </p>
            <!-- Button group with "Edit Profile" button -->
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">

                    <span>Options</span>
                    <span class="visually-hidden">Toggle Dropdown</span>
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a asp-route-Id="@Model.Id" asp-action="EditProfile" asp-controller="Profile" class="dropdown-item" data-ajax="true" data-ajax-method="get" data-ajax-update="#page" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Edit Profile</a>
                    </li>
                    <li><a class="dropdown-item" asp-route-Id="@Model.Id" asp-action="ListUserSkill" asp-controller="Skill">Skills</a></li>
                    <li><a class="dropdown-item" asp-route-Id="@Model.Id" asp-action="Index" asp-controller="Friend">Friends</a></li>
                    <li><a class="dropdown-item" asp-route-Id="@Model.Id" asp-action="Index" asp-controller="Meeting">Schedule</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li>
                        <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout">
                            <button type="submit" class="dropdown-item text-danger">Logout</button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Timeline section -->
    <div class="row row-cols-1 row-cols-md-3 g-4 mt-3">
        @foreach (var item in blogs)
        {
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <div class="position-absolute top-0 end-0">
                            <button type="button" class="btn dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <a asp-route-Id="@item.Id" asp-action="Edit" asp-controller="Blog" class="dropdown-item" data-ajax="true" data-ajax-method="get" data-ajax-update="#page" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Edit Blog</a>
                                </li>
                                <li>
                                    <a class="dropdown-item" asp-route-Id="@item.Id" asp-action="Delete" asp-controller="Blog" data-ajax="true" data-ajax-method="post" data-ajax-confirm="Are you sure?" data-ajax-complete="deletePage">Delete Blog</a>
                                </li>
                            </ul>
                        </div>
                        <p class="card-text">
                            <small class="justify-content-end align-items-end text-body-secondary">
                                @item.CreatedAt.Date.ToString("MMM") @Model.CreatedAt.Year
                            </small><br />
                            @item.Content

                            
                        </p>
                    </div>
                    @if (item.ImgPath != null)
                    {
                        <img src="~/Images/Blogs/@item.ImgPath" class="card-img" height="250px" width="100%" />
                    }
                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <form class="likeForm" asp-action="Like" asp-controller="Blog">
                            <input name="BlogId" value="@item.Id" hidden />
                            <input name="UserId" value="@Model.Id" hidden />
                            @if (likes.Any(x => x.LikedBy == Model.Id && x.LikedBlog == item.Id))
                            {
                                <button type="button" class="likedButton btn btn-primary mb-2 mb-md-0">Liked @item.LikeCount</button>
                            }
                            else
                            {
                                <button type="button" class="likeButton btn btn-primary mb-2 mb-md-0">Like @item.LikeCount</button>
                            }
                        </form>
                        <a asp-action="Comment" asp-controller="Blog" asp-route-id="@item.Id" asp-route-backUrl="@Context.Request.Path" class="btn btn-secondary mb-2 mb-md-0">Comment</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" id="page">
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        deletePage = function (xhr) {
            location.reload();
        }
    });
</script>

<script>
    $(document).ready(function () {
        // Retrieve the like button state from local storage
        var likeButtonState = localStorage.getItem('likeButtonState');

        // Handling the click for .likeButton
        $(document).on("click", ".likeButton", function () {
            var likeButton = $(this);

            var formData = likeButton.closest("div").find(".likeForm").serialize();

            $.ajax({
                type: "POST",
                url: likeButton.closest("div").find(".likeForm").attr("action"),
                data: formData,
                success: function (result) {
                    var currentLikeCount = parseInt(likeButton.text().match(/\d+/)[0]);
                    likeButton.text("Liked " + (currentLikeCount + 1));

                    likeButton.removeClass("likeButton").addClass("likedButton");

                    // Save the updated state to local storage
                    localStorage.setItem('likeButtonState', 'liked');
                },
                error: function (error) {
                    console.error("Error submitting like:", error);
                }
            });
        });

        // Handling the click for .likedButton
        $(document).on("click", ".likedButton", function () {
            var likedButton = $(this);

            var formData = likedButton.closest("div").find(".likeForm").serialize();

            $.ajax({
                type: "POST",
                url: likedButton.closest("div").find(".likeForm").attr("action"),
                data: formData,
                success: function (result) {
                    var currentLikeCount = parseInt(likedButton.text().match(/\d+/)[0]);
                    likedButton.text("Like " + (currentLikeCount - 1));

                    likedButton.removeClass("likedButton").addClass("likeButton");

                    // Save the updated state to local storage
                    localStorage.setItem('likeButtonState', 'like');
                },
                error: function (error) {
                    console.error("Error submitting like:", error);
                }
            });
        });
    });

</script>