@using InterviewSathi.Web.Models.Entities.BlogsEntity
@model InterviewSathi.Web.Models.Entities.ApplicationUser

@{
    ViewData["Title"] = "User Profile";
    var blogs = ViewBag.Blogs;
    var skills = ViewBag.Skills;
    var likes = ViewBag.like as List<LikeCount>;
    int count = ViewBag.Count;
    string myId = @User.FindFirstValue(ClaimTypes.NameIdentifier).ToString();
}

<div class="container mt-4">
    <div class="row">
        <!-- Cover photo -->
        <div class="col-md-12">
            <img src="~/images/covers/@Model.CoverURL" class="img-fluid rounded" alt="Cover Photo">
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-2">
            <!-- Profile picture -->
            <img src="~/images/Profiles/@Model.ProfileURL" class="rounded-circle" width="150" height="150" alt="Profile Picture">
        </div>

        <div class="col-md-8 mt-3 text-dark p-3">
            <!-- User information -->
            <h2>
                @Model.Name @foreach (var role in ViewBag.Role)
                {
                    <span class="badge bg-secondary">@role</span>    
                }
            </h2>
            <p>
                <div>@Model.Bio</div>
                @foreach (var skill in skills)
                {
                    <span class="badge bg-secondary">@skill.Skill.NameOfSkill</span>
                }
            </p>
            <!-- Button group with "Edit Profile" button -->
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle" type="button" id="optionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    Options
                </button>
                <ul class="dropdown-menu" aria-labelledby="optionsDropdown">
                    <li><a class="dropdown-item" asp-route-id="@myId" asp-route-chat="@Model.Id" asp-action="Index" asp-controller="Chat">Send Message</a></li>
                    @if (count == 0)
                    {
                        <li>
                            <form asp-action="CreateFriend" asp-controller="Friend">
                                <input name="sendBy" value="@User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString()" hidden>
                                <input name="sendTo" value="@Model.Id" hidden>
                                <button type="submit" class="dropdown-item">Add Friend</button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li>
                            <form asp-action="DeleteFriend" asp-controller="Friend" asp-route-id="@ViewBag.FriendId" method="post" class="d-inline">
                                <button type="submit" class="dropdown-item">Unfriend</button>
                            </form>
                        </li>
                    }
                    <li><a class="dropdown-item" asp-route-Id="@Model.Id" asp-action="Create" asp-controller="Meeting">Schedule an Interview</a></li>
                </ul>
            </div>
        </div>
    </div>

    <!-- Timeline section -->
    <div class="row row-cols-1 row-cols-md-3 g-4 mt-4">
        @foreach (var item in blogs)
        {
            <div class="col">
                <div class="card">
                    <div class="card-body">
                        <p class="card-text">@item.Content</p>
                    </div>
                    @if (item.ImgPath != null)
                    {
                        <img src="~/Images/Blogs/@item.ImgPath" class="card-img-top" height="250px" alt="Blog Image">
                    }
                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <form class="likeForm" asp-action="Like" asp-controller="Blog">
                            <input name="BlogId" value="@item.Id" hidden />
                            <input name="UserId" value="@myId" hidden />
                            @if (likes.Any(x => x.LikedBy == myId && x.LikedBlog == item.Id))
                            {
                                <button type="button" class="likedButton btn btn-primary">Liked @item.LikeCount</button>
                            }
                            else
                            {
                                <button type="button" class="likeButton btn btn-outline-primary">Like @item.LikeCount</button>
                            }
                        </form>
                        <a asp-action="Comment" asp-controller="Blog" asp-route-id="@item.Id" asp-route-backUrl="@Context.Request.Path" class="btn btn-secondary">Comment</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Retrieve the like button state from local storage
        var likeButtonState = localStorage.getItem('likeButtonState');

        // Handling the click for .likeButton
        $(document).on("click", ".likeButton", function () {
            var likeButton = $(this);

            var formData = likeButton.closest("div").find(".likeForm").serialize();

            $.ajax({
                type: "POST",
                url: likeButton.closest("div").find(".likeForm").attr("action"),
                data: formData,
                success: function (result) {
                    var currentLikeCount = parseInt(likeButton.text().match(/\d+/)[0]);
                    likeButton.text("Liked " + (currentLikeCount + 1));

                    likeButton.removeClass("likeButton").addClass("likedButton");

                    // Save the updated state to local storage
                    localStorage.setItem('likeButtonState', 'liked');
                },
                error: function (error) {
                    console.error("Error submitting like:", error);
                }
            });
        });

        // Handling the click for .likedButton
        $(document).on("click", ".likedButton", function () {
            var likedButton = $(this);

            var formData = likedButton.closest("div").find(".likeForm").serialize();

            $.ajax({
                type: "POST",
                url: likedButton.closest("div").find(".likeForm").attr("action"),
                data: formData,
                success: function (result) {
                    var currentLikeCount = parseInt(likedButton.text().match(/\d+/)[0]);
                    likedButton.text("Like " + (currentLikeCount - 1));

                    likedButton.removeClass("likedButton").addClass("likeButton");

                    // Save the updated state to local storage
                    localStorage.setItem('likeButtonState', 'like');
                },
                error: function (error) {
                    console.error("Error submitting like:", error);
                }
            });
        });
    });

</script>