@using InterviewSathi.Web.Models.Entities
@using Microsoft.AspNetCore.Identity
@model InterviewSathi.Web.ViewModels.LoginVM;
@inject SignInManager<ApplicationUser> signinManager
@{
    Layout = "_Login&SignUp";
    ViewData["Title"] = "Login";

}

@{
    var schemes = await signinManager.GetExternalAuthenticationSchemesAsync();
    var loginProviders = schemes.ToList();
}


<section class="vh-100 d-flex align-items-center justify-content-center">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                <!-- Image Div -->
                <div class="card">
                    <img src="~/images/statics/loginpage.jpg" alt="login form" class="img-fluid" />
                </div>
            </div>
            <div class="col-md-6 col-lg-5">
                <div class="form-container">
                    @if (loginProviders.Count() > 0)
                    {
                        <div class="p-3">
                            <div class="p-3 text-center">
                                <section>
                                    <p>User Gmail service to Login</p>
                                    <form asp-controller="Account" asp-action="ExternalLogin"
                                          asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" role="form">
                                        <div>
                                            <p>
                                                @foreach (var provider in loginProviders)
                                                {
                                                    <button type="submit" name="provider" value="@provider.Name" class="btn btn-dark">
                                                        <i class="bi bi-google"></i>
                                                        @provider.Name
                                                    </button>
                                                }
                                            </p>
                                        </div>
                                    </form>
                                </section>
                            </div>
                        </div>
                    }
                    <form asp-action="Login" asp-controller="Account">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <h5 class="fw-normal mb-4">Login Now</h5>
                        <div class="form-group">
                            <label asp-for="Email">Email</label>
                            <input type="email" class="form-control" asp-for="Email">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Password">Password</label>
                            <input type="password" class="form-control" asp-for="Password">
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="pt-3">
                            <button class="btn btn-dark btn-block" type="submit">
                                <i class="bi bi-box-arrow-in-right"></i>
                                Log in
                            </button>
                        </div>
                        <p class="mt-3 mb-2" style="color: #393f81;">
                            Already have an account?
                            <a asp-controller="Account" asp-action="Register" style="color: #393f81;">Register here</a>
                        </p>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section> 
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
