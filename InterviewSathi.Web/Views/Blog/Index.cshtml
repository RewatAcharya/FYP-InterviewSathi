@using System.Security.Claims
@using InterviewSathi.Web.Models.Entities
@using InterviewSathi.Web.Models.Entities.BlogsEntity
@model PaginatedList<InterviewSathi.Web.Models.Entities.BlogsEntity.Blog>

@{
    ViewData["Title"] = "Index";
    var likes = ViewBag.like as List<LikeCount>;
    var myProfile = ViewBag.MyProfile as ApplicationUser;
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier)?.ToString();
}

<div class="text-center p-2">
    <a asp-action="Index" asp-controller="Profile" asp-route-id="@userId" class="text-decoration-none">
        <img class="rounded-circle shadow-1-strong me-5"
             src="~/images/Profiles/@myProfile.ProfileURL" alt="avatar" width="65"
             height="60" />
    </a>

    <a asp-action="Create" asp-controller="Blog" data-ajax="true" data-ajax-method="get" data-ajax-update="#page" class="btn shadow-lg btn-outline-dark btn-lg" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
        <i class="bi bi-share-fill fs-4 me-2"></i>
        <span class="d-none d-sm-inline">What's New...? @myProfile.Name</span>
    </a>
</div>



@foreach (var item in Model)
{
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <div class="card mb-3 shadow-lg rounded-1">
                <div class="card-body">
                    <div class="d-flex flex-start align-items-center">
                        @if (item.User.Id == userId)
                        {
                            <img class="rounded-circle shadow-1-strong me-3"
                                 src="~/images/Profiles/@item.User.ProfileURL" alt="avatar" width="60"
                                 height="60" />
                            <a asp-action="Index" asp-controller="Profile" asp-route-id="@item.User.Id" class="text-decoration-none">
                                <h6 class="fw-bold text-black mb-1">@item.User.Name</h6>
                                <p class="text-muted small mb-0">
                                    @item.CreatedAt.Date.ToString("MMM") @item.CreatedAt.Year
                                </p>
                            </a>
                        }
                        else
                        {
                            <img class="rounded-circle shadow-1-strong me-3"
                                 src="~/images/Profiles/@item.User.ProfileURL" alt="avatar" width="60"
                                 height="60" />
                            <a asp-action="UserProfile" asp-controller="Profile" asp-route-id="@item.User.Id" class="text-decoration-none">
                                <h6 class="fw-bold text-black mb-1">@item.User.Name</h6>
                                <p class="text-muted small mb-0">
                                    @item.CreatedAt.Date.ToString("MMM") @item.CreatedAt.Year
                                </p>
                            </a>
                        }
                    </div>
                    <p class="card-text p-2 bg-light">@item.Content</p>
                </div>
                @if (item.ImgPath != null)
                {
                    <img src="~/Images/Blogs/@item.ImgPath" class="bd-placeholder-img card-img-top img-fluid" alt="Blog Image" />
                }
                <div class="blog-footer card-footer d-flex justify-content-between align-items-center">
                    <form class="likeForm" asp-action="Like" asp-controller="Blog">
                        <input name="BlogId" value="@item.Id" hidden />
                        <input name="UserId" value="@userId" hidden />
                        @if (likes.Any(x => x.LikedBy == userId && x.LikedBlog == item.Id))
                        {
                            <button type="button" class="likedButton btn btn-outline-dark mb-2 mb-md-0">Liked @item.LikeCount</button>
                        }
                        else
                        {
                            <button type="button" class="likeButton btn btn-outline-dark mb-2 mb-md-0">Like @item.LikeCount</button>
                        }
                    </form>
                    <a asp-action="Comment" asp-controller="Blog" asp-route-id="@item.Id" asp-route-backUrl="@Context.Request.Path" class="btn btn-outline-dark mb-2 mb-md-0">Comment</a>
                </div>
            </div>
        </div>
    </div>
}



<div class="pagination justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.PageIndex - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">&laquo;</span>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" href="?page=@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="?page=@(Model.PageIndex + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true">&raquo;</span>
                </li>
            }
        </ul>
    </nav>
</div>


<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" id="page">
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    $(document).ready(function () {
        // Retrieve the like button state from local storage
        var likeButtonState = localStorage.getItem('likeButtonState');

        // Handling the click for .likeButton
        $(document).on("click", ".likeButton", function () {
            var likeButton = $(this);

            var formData = likeButton.closest("div").find(".likeForm").serialize();

            $.ajax({
                type: "POST",
                url: likeButton.closest("div").find(".likeForm").attr("action"),
                data: formData,
                success: function (result) {
                    var currentLikeCount = parseInt(likeButton.text().match(/\d+/)[0]);
                    likeButton.text("Liked " + (currentLikeCount + 1));

                    likeButton.removeClass("likeButton").addClass("likedButton");

                    // Save the updated state to local storage
                    localStorage.setItem('likeButtonState', 'liked');
                },
                error: function (error) {
                    console.error("Error submitting like:", error);
                }
            });
        });

        // Handling the click for .likedButton
        $(document).on("click", ".likedButton", function () {
            var likedButton = $(this);

            var formData = likedButton.closest("div").find(".likeForm").serialize();

            $.ajax({
                type: "POST",
                url: likedButton.closest("div").find(".likeForm").attr("action"),
                data: formData,
                success: function (result) {
                    var currentLikeCount = parseInt(likedButton.text().match(/\d+/)[0]);
                    likedButton.text("Like " + (currentLikeCount - 1));

                    likedButton.removeClass("likedButton").addClass("likeButton");

                    // Save the updated state to local storage
                    localStorage.setItem('likeButtonState', 'like');
                },
                error: function (error) {
                    console.error("Error submitting like:", error);
                }
            });
        });
    });

</script>